#!Copyright Â© 2021 Aymen Segni segniaymen1@gmail.com

#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0

#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


#!/bin/bash
#
# See usage().

[[ -n $DEBUG ]] && set -x

set -eou pipefail
IFS=$'\n\t'

# We do this so the called script name variable is avilable in utility functions
# below, in case of name change, brew alias, etc.
SCRIPT=`basename ${BASH_SOURCE[0]}`

usage() {
  cat <<EOF
${SCRIPT}(1)

NAME
    ${SCRIPT} - kubectl pod-interface is a fun, quick, 1-command, pod utility interactive kubectl plugin which wraps kubectl commands, to help you easily interact with your running kubernetes pods

REQUIRES
    kubectl(1)

SYNOPSIS
    ${SCRIPT} [command] [OPTIONS]

DESCRIPTION
    kubectl {SCRIPT} is a fun, quick, 1-command, pod utility interactive kubectl plugin which wraps kubectl commands, to help you easily interact with your running kubernetes pods


  # 1. pex: quick, 1-command, interactive, Kubernetes pod exec utility
  # get a shell to a running Container.
  $ kubectl {SCRIPT} pex

  # 2. pof: quick, 1-command, interactive, Kubernetes pod port-forward utility
  # forward local port to a running pod.
  $ kubectl {SCRIPT} pof

  # 3. pdl : quick, 1-command, interactive, Kubernetes pod deletion utility
  # delete running pod.
  $ kubectl {SCRIPT} pdel

  # 4. plg : quick, 1-command, interactive, Kubernetes pod logs utility
  # print the logs for a container in a pod.
  $ kubectl {SCRIPT} plog

  # 5. pcp : quick, 1-command, interactive, Kubernetes pod copy files utility
  # securely copy files from a container in a pod to your local machine.
  $ kubectl {SCRIPT} pcp

  # 6. pcpl : quick, 1-command, interactive, Kubernetes pod copy files utility
  # securely copy files from you

OPTIONS
    -h, --help
        Show this help message
    -f, --force
        `kud -f` will delete the first pod in the namespace without further prompting.
    -a, --all
        Delete all pods in the namespace

EOF
}

# $ kubectl pod-interface pdel [option] 

# Transform long options to short ones. Sick trick.
# http://stackoverflow.com/a/30026641/4096495
for arg in "$@"; do
  shift
  case "$arg" in
    "--help")       set -- "$@" "-h" ;;
    "--all")        set -- "$@" "-a" ;;
    "--force")      set -- "$@" "-f" ;;
    *)              set -- "$@" "$arg"
  esac
done

while getopts :haf OPT; do
  case $OPT in
    h ) HELP=true;;
    a ) ALL=true;;
    f ) FORCE=true;;
    \?) echo "Unknown option: -$OPTARG" >&2; exit 1;;
    : ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
  esac
done
shift $((OPTIND-1))

# Usage, list, and delete should not happen simultaneously, so elif.
if [[ ${HELP:-} == 'true' ]]; then
  usage; exit 0
  else
    if [[ ${FORCE:-} == 'true' ]]; then
    po_del_force; exit 0
    else
      if [[ ${ALL:-} == 'true' ]]; then
      po_del_all; exit 0
      else
        ns=$(ns_current)
        echo "Namespace? (default ${ns:-default}):"; ns_number_list; read NS;
        echo 'Pod number? (default 1):'; po_number_list; read POD;
        # Might want to use the negated form: 
        # https://stackoverflow.com/questions/1885525/how-do-i-prompt-a-user-for-confirmation-in-bash-script
        read -p "Are you sure? " -n 1 -r
        echo    # (optional) move to a new line
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            po_del
          fi
      fi
    fi
fi

